syntax = "proto3";

option java_multiple_files = false;
option java_package = "com.smartclassroom";
option java_outer_classname = "HeatingProto";


// heating service interface definition
service HeatingService {
    // Unary RPC：get heating state
    rpc GetHeatingStatus (GetHeatingStatusRequest) returns (HeatingStatus);

    // Server Streaming RPC：Continuously send heating status
    rpc StreamHeatingEvents (HeatingEventsRequest) returns (stream HeatingStatus);

    // Client Streaming RPC
    rpc ControlHeating (stream ControlHeatingRequest) returns (HeatingControlResponse);

    // Bi-directional Stream RPC
    rpc MonitorHeatingStream (stream MonitorHeatingRequest) returns (stream HeatingStatus);
}

message GetHeatingStatusRequest {}
message HeatingEventsRequest {}
message HeatingStatus {
    string name = 1;
    bool is_on = 2;
    double temperature = 3; // current temperature of the heating
}
message ControlHeatingRequest {
    bool turn_on = 1;
    double set_temperature = 2; // setting the heating temperature
}
message HeatingControlResponse {
    bool success = 1;
}
message MonitorHeatingRequest {}
